version: '3.8'

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: emergency_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin911
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - emergency_net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD-SHELL", "echo srvr | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - emergency_net

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - emergency_net

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@911.com
      PGADMIN_DEFAULT_PASSWORD: admin7
    ports:
      - "8080:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - emergency_net

  auth-service:
    build: auth-service/.
    ports:
      - "8091:8091"
    environment:
      SPRING_DATASOURCE_HOST: postgres
      SPRING_DATASOURCE_DB: emergency_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin911
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - emergency_net

  ambulance-service:
    build: ambulance-service/.
    ports:
      - "8092:8092"
    environment:
      SPRING_DATASOURCE_HOST: postgres
      SPRING_DATASOURCE_DB: emergency_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin911
      SPRING_PROFILES_ACTIVE: docker
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - emergency_net

  emergency-service:
    build: emergency-service/.
    ports:
      - "8093:8093"
    environment:
      SPRING_DATASOURCE_HOST: postgres
      SPRING_DATASOURCE_DB: emergency_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin911
      SPRING_PROFILES_ACTIVE: docker
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - emergency_net

  hospital-service:
    build: hospital-service/.
    ports:
      - "8094:8094"
    environment:
      SPRING_DATASOURCE_HOST: postgres
      SPRING_DATASOURCE_DB: emergency_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin911
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - emergency_net

  route-service:
    build: route-service/.
    ports:
      - "8095:8095"
    environment:
      SPRING_DATASOURCE_HOST: postgres
      SPRING_DATASOURCE_DB: emergency_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin911
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - emergency_net

  gateway-service:
    build: gateway-service/.
    ports:
      - "8090:8090"
    environment:
      AUTH_SERVICE_HOST: auth-service
      AMBULANCE_SERVICE_HOST: ambulance-service
      EMERGENCY_SERVICE_HOST: emergency-service
      HOSPITAL_SERVICE_HOST: hospital-service
      ROUTE_SERVICE_HOST: route-service
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - auth-service
      - ambulance-service
      - emergency-service
      - hospital-service
      - route-service
    networks:
      - emergency_net

volumes:
  postgres_data:

networks:
  emergency_net:
    driver: bridge
